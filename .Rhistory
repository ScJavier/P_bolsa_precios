library(quantmod)
library(ggplot2)
y <- rnorm(31,2,1)
x <- seq.Date(as.Date("2015-01-01"),as.Date("2015-01-31"),1)
d<-data.frame(cbind(x,y))
d$pmean <- mean(d$y)
d$m1d <- mean(d$y)-sd(d$y)
d$p1d <- mean(d$y)+sd(d$y)
d2 <- xts(d[,-1],order.by=as.Date(d$x))
chartSeries(d2$y, TA="addCCI(5)")
ggplot(d, aes(as.Date(x))) +
geom_line(aes(y = y, colour = "blue")) +
geom_line(aes(y = pmean, colour = "red")) +
geom_line(aes(y = p1d, colour = "red")) +
geom_line(aes(y = m1d, colour = "red"))
library(quantmod)
simbolo <- 'BMV:AC'
fecha <- '2016-09-10'
datos <- getSymbols.google(simbolo, from = fecha, auto.assign = F)
library(ggplot2)
datos <- data.frame(datos)
datos$Fecha = as.Date(rownames(datos))
colnames(datos)[4] = 'Precio'
gg <- ggplot(data = datos, aes(x = Fecha, y = Precio)) + geom_line()
library(plotly)
ggplotly(gg)
ggplot(data = datos, aes(x = Fecha, y = Precio)) + geom_line(col = 'darkcyan')
ggplot(data = datos, aes(x = Fecha, y = Precio)) + geom_line(col = 'darkcyan', lwd = 2)
ggplot(data = datos, aes(x = Fecha, y = Precio)) + geom_line(col = 'darkcyan', lwd = 1.5)
ggplot(data = datos, aes(x = Fecha, y = Precio)) + geom_line(col = 'darkcyan', lwd = 1.2)
moveTA(datos)
ggplot(data = datos, aes(x = Fecha, y = Precio)) + geom_line(col = 'darkcyan', lwd = 1.2)
ggplot(data = datos, aes(x = Fecha, y = Precio)) + geom_line(col = 'darkcyan', lwd = 1.2) +
xlim(min(datos$Fecha), max(datos$Fecha))
max(datos$Fecha)
min(datos$Fecha)
ggplot(data = datos, aes(x = Fecha, y = Precio)) +
geom_line(col = 'darkcyan', lwd = 1.2) + xlim(min(datos$Fecha), max(datos$Fecha))
ff <- datos$Fecha
ff
mm <- rep(NA, length(ff))
ff <- datos$Fecha
mm <- rep(NA, length(ff))
prediodo <- 5
for(j in 5:length(ff))
{
mm[j] <- mean(datos$Precio[j:(j+periodo)])
}
ff <- datos$Fecha
mm <- rep(NA, length(ff))
periodo <- 5
for(j in 5:length(ff))
{
mm[j] <- mean(datos$Precio[j:(j+periodo)])
}
mm
ff <- datos$Fecha
mm <- rep(NA, length(ff))
periodo <- 5
for(j in 5:length(ff))
{
mm[j] <- mean(datos$Precio[(j-periodo):j])
}
mm
ff <- datos$Fecha
datos$mm <- rep(NA, length(ff))
periodo <- 5
ff <- datos$Fecha
datos$mm <- rep(NA, length(ff))
periodo <- 5
for(j in 5:length(ff))
{
datos$mm[j] <- mean(datos$Precio[(j-periodo):j])
}
ggplot(data = datos, aes(x = Fecha, y = Precio)) +
geom_line(col = 'darkcyan', lwd = 1.2) + xlim(min(datos$Fecha), max(datos$Fecha)) +
geom_line(aes(y = mm), col = 'orange', lwd = 1.2)
ggplot(data = datos, aes(x = Fecha, y = Precio)) +
geom_line(col = 'darkcyan', lwd = 1.1) + xlim(min(datos$Fecha), max(datos$Fecha)) +
geom_line(aes(y = mm), col = 'orange', lwd = 1.1)
ggplot(data = datos, aes(x = Fecha, y = Precio)) +
geom_line(col = 'darkcyan') + xlim(min(datos$Fecha), max(datos$Fecha)) +
geom_line(aes(y = mm), col = 'orange')
ggplot(data = datos, aes(x = Fecha, y = Precio)) +
geom_line(col = 'darkcyan', lwd = 0.5) + xlim(min(datos$Fecha), max(datos$Fecha)) +
geom_line(aes(y = mm), col = 'orange')
ggplot(data = datos, aes(x = Fecha, y = Precio)) +
geom_line(col = 'darkcyan', lwd = 0.8) + xlim(min(datos$Fecha), max(datos$Fecha)) +
geom_line(aes(y = mm), col = 'orange')
ggplot(data = datos, aes(x = Fecha, y = Precio)) +
geom_line(col = 'darkcyan', lwd = 0.75) + xlim(min(datos$Fecha), max(datos$Fecha)) +
geom_line(aes(y = mm), col = 'orange', lwd = 0.75)
shiny::runApp()
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
shiny::runApp()
ff <- datos$Fecha
datos$mm <- rep(NA, length(ff))
periodo <- 5
for(j in 5:length(ff))
{
datos$mm[j] <- mean(datos$Precio[(j-periodo):j])
}
ggplot(data = datos, aes(x = Fecha, y = Precio)) +
geom_line(col = 'darkcyan', lwd = 0.75) + xlim(min(datos$Fecha), max(datos$Fecha)) +
geom_line(aes(y = mm), col = 'orange', lwd = 0.75)
source('~/Repositorios/P_bolsa_precios/pruebas.R', encoding = 'UTF-8')
library(shiny)
runGitHub('P_bolsa_precios', 'ScJavier')
library(quantmod)
simbolo <- 'BMV:AC'
fecha <- '2016-09-10'
datos <- getSymbols.google(simbolo, from = fecha, auto.assign = F)
library(ggplot2)
datos <- data.frame(datos)
datos$Fecha = as.Date(rownames(datos))
colnames(datos)[4] = 'Precio'
# Media movil
ff <- datos$Fecha
datos$MA5 <- rep(NA, length(ff))
periodo <- 5
for(j in 5:length(ff))
{
datos$MA5[j] <- mean(datos$Precio[(j-periodo):j])
}
# GrÃ¡fica inicial
pp <- ggplot(data = datos, aes(x = Fecha)) +
geom_line(aes(text = Fecha, y = Precio), col = 'darkcyan', lwd = 0.5) +
xlim(min(datos$Fecha), max(datos$Fecha)) +
geom_line(aes(text = Fecha, y = MA5), col = 'orange', lwd = 0.5)
library(plotly)
ggplotly(pp, tooltip = c('text', 'y'))
runApp()
runApp()
shiny::runApp()
install.packages("quantmod")
install.packages("dygraphs")
install.packages("dplyr")
install.packages("lubridate")
runApp()
install.packages('maps')
data(canada.cities, package = "maps")
viz <- ggplot(canada.cities, aes(long, lat)) +
borders(regions = "canada") +
coord_equal() +
geom_point(aes(text = name, size = pop), colour = "red", alpha = 1/2)
ggplotly(viz, tooltip = c("text", "size"))
library(ggplot2)
library(plotly)
ggplotly(pp, tooltip = c('text', 'x', 'y'))
data(canada.cities, package = "maps")
viz <- ggplot(canada.cities, aes(long, lat)) +
borders(regions = "canada") +
coord_equal() +
geom_point(aes(text = name, size = pop), colour = "red", alpha = 1/2)
ggplotly(viz, tooltip = c("text", "size"))
